package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.30

import (
	"context"
	"fmt"
	"time_speak_server/graph/generated"
)

// AddSubscribe is the resolver for the addSubscribe field.
func (r *mutationResolver) AddSubscribe(ctx context.Context, input generated.SubscribeInput) (string, error) {
	panic(fmt.Errorf("not implemented: AddSubscribe - addSubscribe"))
}

// UpdateSubscribe is the resolver for the updateSubscribe field.
func (r *mutationResolver) UpdateSubscribe(ctx context.Context, input generated.SubscribeInput) (bool, error) {
	panic(fmt.Errorf("not implemented: UpdateSubscribe - updateSubscribe"))
}

// DeleteSubscribe is the resolver for the deleteSubscribe field.
func (r *mutationResolver) DeleteSubscribe(ctx context.Context, input string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteSubscribe - deleteSubscribe"))
}

// AllSubscribes is the resolver for the allSubscribes field.
func (r *queryResolver) AllSubscribes(ctx context.Context) ([]*generated.Subscribe, error) {
	panic(fmt.Errorf("not implemented: AllSubscribes - allSubscribes"))
}
